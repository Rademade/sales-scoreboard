version: '3.3'

networks:
  proxy:
    external:
      name: proxy
  app:

services:
  nginx:
    image: "${REGISTRY_HOST}/${PROJECT_IMAGE}/nginx:${PROJECT_TAG}"
    networks:
      - app
      - proxy
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      PROJECT_NAME: ${PROJECT_NAME}
    deploy:
      replicas: 1
      labels:
        traefik.port: 80
        traefik.docker.network: proxy
        traefik.backend: "${PROJECT_NAME}_nginx"
        traefik.frontend.rule: "Host:${VIRTUAL_HOST}"
        traefik.acme.domains: ${VIRTUAL_HOST}
        traefik.frontend.headers.SSLRedirect: 'true'
      placement:
        constraints:
          - node.labels.role == ${TARGET_NODE}

  app:
    image: "${REGISTRY_HOST}/${PROJECT_IMAGE}/app:${PROJECT_TAG}"
    networks:
      - app
    environment:
      WEB_CONCURRENCY: ${WEB_CONCURRENCY}
      RAILS_MIN_THREADS: ${RAILS_MIN_THREADS}
      RAILS_MAX_THREADS: ${RAILS_MAX_THREADS}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      PIPEDRIVE_API_KEY: ${PIPEDRIVE_API_KEY}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == ${TARGET_NODE}
